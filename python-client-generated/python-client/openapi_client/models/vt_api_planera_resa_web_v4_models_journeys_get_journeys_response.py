# coding: utf-8

"""
    Planera Resa

    Sök och planera resor med Västtrafik

    The version of the OpenAPI document: v4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import List, Optional
from pydantic import BaseModel, Field, conlist
from openapi_client.models.vt_api_planera_resa_web_v4_models_journeys_journey_api_model import VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel
from openapi_client.models.vt_api_planera_resa_web_v4_models_pagination_links import VTApiPlaneraResaWebV4ModelsPaginationLinks
from openapi_client.models.vt_api_planera_resa_web_v4_models_pagination_properties import VTApiPlaneraResaWebV4ModelsPaginationProperties

class VTApiPlaneraResaWebV4ModelsJourneysGetJourneysResponse(BaseModel):
    """
    VTApiPlaneraResaWebV4ModelsJourneysGetJourneysResponse
    """
    results: Optional[conlist(VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel)] = Field(None, description="The results.")
    pagination: Optional[VTApiPlaneraResaWebV4ModelsPaginationProperties] = None
    links: Optional[VTApiPlaneraResaWebV4ModelsPaginationLinks] = None
    __properties = ["results", "pagination", "links"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> VTApiPlaneraResaWebV4ModelsJourneysGetJourneysResponse:
        """Create an instance of VTApiPlaneraResaWebV4ModelsJourneysGetJourneysResponse from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        # override the default output from pydantic by calling `to_dict()` of each item in results (list)
        _items = []
        if self.results:
            for _item in self.results:
                if _item:
                    _items.append(_item.to_dict())
            _dict['results'] = _items
        # override the default output from pydantic by calling `to_dict()` of pagination
        if self.pagination:
            _dict['pagination'] = self.pagination.to_dict()
        # override the default output from pydantic by calling `to_dict()` of links
        if self.links:
            _dict['links'] = self.links.to_dict()
        # set to None if results (nullable) is None
        # and __fields_set__ contains the field
        if self.results is None and "results" in self.__fields_set__:
            _dict['results'] = None

        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> VTApiPlaneraResaWebV4ModelsJourneysGetJourneysResponse:
        """Create an instance of VTApiPlaneraResaWebV4ModelsJourneysGetJourneysResponse from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return VTApiPlaneraResaWebV4ModelsJourneysGetJourneysResponse.parse_obj(obj)

        _obj = VTApiPlaneraResaWebV4ModelsJourneysGetJourneysResponse.parse_obj({
            "results": [VTApiPlaneraResaWebV4ModelsJourneysJourneyApiModel.from_dict(_item) for _item in obj.get("results")] if obj.get("results") is not None else None,
            "pagination": VTApiPlaneraResaWebV4ModelsPaginationProperties.from_dict(obj.get("pagination")) if obj.get("pagination") is not None else None,
            "links": VTApiPlaneraResaWebV4ModelsPaginationLinks.from_dict(obj.get("links")) if obj.get("links") is not None else None
        })
        return _obj


