# coding: utf-8

"""
    Planera Resa

    Sök och planera resor med Västtrafik

    The version of the OpenAPI document: v4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.vt_api_planera_resa_web_v4_models_departures_and_arrivals_get_arrivals_response import VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsGetArrivalsResponse  # noqa: E501

class TestVTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsGetArrivalsResponse(unittest.TestCase):
    """VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsGetArrivalsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsGetArrivalsResponse:
        """Test VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsGetArrivalsResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsGetArrivalsResponse`
        """
        model = VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsGetArrivalsResponse()  # noqa: E501
        if include_optional:
            return VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsGetArrivalsResponse(
                results = [
                    openapi_client.models.vt/api_planera_resa/web/v4/models/departures_and_arrivals/arrival_api_model.VT.ApiPlaneraResa.Web.V4.Models.DeparturesAndArrivals.ArrivalApiModel(
                        details_reference = '', 
                        service_journey = openapi_client.models.vt/api_planera_resa/web/v4/models/departures_and_arrivals/service_journey_api_model.VT.ApiPlaneraResa.Web.V4.Models.DeparturesAndArrivals.ServiceJourneyApiModel(
                            gid = '0', 
                            origin = '', 
                            direction = '', 
                            line = openapi_client.models.vt/api_planera_resa/web/v4/models/departures_and_arrivals/line_api_model.VT.ApiPlaneraResa.Web.V4.Models.DeparturesAndArrivals.LineApiModel(
                                gid = '', 
                                name = '', 
                                short_name = '', 
                                designation = '', 
                                background_color = '', 
                                foreground_color = '', 
                                border_color = '', 
                                transport_mode = 'unknown', 
                                transport_sub_mode = 'unknown', 
                                is_wheelchair_accessible = True, ), ), 
                        stop_point = openapi_client.models.vt/api_planera_resa/web/v4/models/departures_and_arrivals/stop_point_api_model.VT.ApiPlaneraResa.Web.V4.Models.DeparturesAndArrivals.StopPointApiModel(
                            gid = '0', 
                            name = '0', 
                            platform = '', 
                            latitude = 1.337, 
                            longitude = 1.337, ), 
                        planned_time = '0', 
                        estimated_time = '', 
                        estimated_otherwise_planned_time = '', 
                        is_cancelled = True, 
                        is_part_cancelled = True, )
                    ],
                pagination = openapi_client.models.vt/api_planera_resa/web/v4/models/pagination_properties.VT.ApiPlaneraResa.Web.V4.Models.PaginationProperties(
                    limit = 56, 
                    offset = 56, 
                    size = 56, ),
                links = openapi_client.models.vt/api_planera_resa/web/v4/models/pagination_links.VT.ApiPlaneraResa.Web.V4.Models.PaginationLinks(
                    previous = '', 
                    next = '', 
                    current = '', )
            )
        else:
            return VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsGetArrivalsResponse(
        )
        """

    def testVTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsGetArrivalsResponse(self):
        """Test VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsGetArrivalsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
