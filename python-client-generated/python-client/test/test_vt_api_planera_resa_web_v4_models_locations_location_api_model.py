# coding: utf-8

"""
    Planera Resa

    Sök och planera resor med Västtrafik

    The version of the OpenAPI document: v4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.vt_api_planera_resa_web_v4_models_locations_location_api_model import VTApiPlaneraResaWebV4ModelsLocationsLocationApiModel  # noqa: E501

class TestVTApiPlaneraResaWebV4ModelsLocationsLocationApiModel(unittest.TestCase):
    """VTApiPlaneraResaWebV4ModelsLocationsLocationApiModel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VTApiPlaneraResaWebV4ModelsLocationsLocationApiModel:
        """Test VTApiPlaneraResaWebV4ModelsLocationsLocationApiModel
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VTApiPlaneraResaWebV4ModelsLocationsLocationApiModel`
        """
        model = VTApiPlaneraResaWebV4ModelsLocationsLocationApiModel()  # noqa: E501
        if include_optional:
            return VTApiPlaneraResaWebV4ModelsLocationsLocationApiModel(
                gid = '',
                name = '0',
                location_type = 'unknown',
                latitude = 1.337,
                longitude = 1.337,
                platform = '',
                straight_line_distance_in_meters = 56,
                has_local_service = True
            )
        else:
            return VTApiPlaneraResaWebV4ModelsLocationsLocationApiModel(
                name = '0',
                location_type = 'unknown',
        )
        """

    def testVTApiPlaneraResaWebV4ModelsLocationsLocationApiModel(self):
        """Test VTApiPlaneraResaWebV4ModelsLocationsLocationApiModel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
