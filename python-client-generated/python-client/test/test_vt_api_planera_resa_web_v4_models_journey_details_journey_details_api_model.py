# coding: utf-8

"""
    Planera Resa

    Sök och planera resor med Västtrafik

    The version of the OpenAPI document: v4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.vt_api_planera_resa_web_v4_models_journey_details_journey_details_api_model import VTApiPlaneraResaWebV4ModelsJourneyDetailsJourneyDetailsApiModel  # noqa: E501

class TestVTApiPlaneraResaWebV4ModelsJourneyDetailsJourneyDetailsApiModel(unittest.TestCase):
    """VTApiPlaneraResaWebV4ModelsJourneyDetailsJourneyDetailsApiModel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VTApiPlaneraResaWebV4ModelsJourneyDetailsJourneyDetailsApiModel:
        """Test VTApiPlaneraResaWebV4ModelsJourneyDetailsJourneyDetailsApiModel
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VTApiPlaneraResaWebV4ModelsJourneyDetailsJourneyDetailsApiModel`
        """
        model = VTApiPlaneraResaWebV4ModelsJourneyDetailsJourneyDetailsApiModel()  # noqa: E501
        if include_optional:
            return VTApiPlaneraResaWebV4ModelsJourneyDetailsJourneyDetailsApiModel(
                departure_access_link = openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/departure_access_link_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.DepartureAccessLinkApiModel(
                    transport_mode = 'unknown', 
                    transport_sub_mode = 'unknown', 
                    origin = openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/link_endpoint_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.LinkEndpointApiModel(
                        gid = '', 
                        name = '0', 
                        location_type = 'unknown', 
                        latitude = 1.337, 
                        longitude = 1.337, 
                        planned_time = '0', 
                        estimated_time = '', 
                        estimated_otherwise_planned_time = '', 
                        notes = [
                            openapi_client.models.vt/api_planera_resa/core/models/note.VT.ApiPlaneraResa.Core.Models.Note(
                                type = '', 
                                severity = 'unknown', 
                                text = '', )
                            ], ), 
                    destination = openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/call_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.CallApiModel(
                        stop_point = openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/stop_point_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.StopPointApiModel(
                            gid = '0', 
                            name = '0', 
                            platform = '', 
                            latitude = 1.337, 
                            longitude = 1.337, 
                            stop_area = openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/stop_area_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.StopAreaApiModel(
                                gid = '', 
                                name = '', 
                                latitude = 1.337, 
                                longitude = 1.337, 
                                tariff_zone1 = openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/tariff_zone_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.TariffZoneApiModel(
                                    gid = '', 
                                    name = '', 
                                    number = 56, 
                                    short_name = '', ), 
                                tariff_zone2 = openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/tariff_zone_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.TariffZoneApiModel(
                                    gid = '', 
                                    name = '', 
                                    number = 56, 
                                    short_name = '', ), ), ), 
                        planned_time = '0', 
                        estimated_time = '', 
                        estimated_otherwise_planned_time = '', ), 
                    notes = [
                        openapi_client.models.vt/api_planera_resa/core/models/note.VT.ApiPlaneraResa.Core.Models.Note(
                            type = '', 
                            text = '', )
                        ], 
                    distance_in_meters = 56, 
                    planned_departure_time = '', 
                    planned_arrival_time = '', 
                    planned_duration_in_minutes = 56, 
                    estimated_departure_time = '', 
                    estimated_arrival_time = '', 
                    estimated_duration_in_minutes = 56, 
                    estimated_number_of_steps = 56, 
                    link_coordinates = [
                        openapi_client.models.vt/api_planera_resa/web/v4/models/coordinate_api_model.VT.ApiPlaneraResa.Web.V4.Models.CoordinateApiModel(
                            latitude = 1.337, 
                            longitude = 1.337, 
                            elevation = 1.337, 
                            is_on_trip_leg = True, 
                            is_trip_leg_start = True, 
                            is_trip_leg_stop = True, )
                        ], 
                    segments = [
                        openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/link_segment_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.LinkSegmentApiModel(
                            name = '', 
                            maneuver = 'none', 
                            orientation = 'unknown', 
                            maneuver_description = '', 
                            distance_in_meters = 56, )
                        ], ),
                trip_legs = [
                    openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/trip_leg_details_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.TripLegDetailsApiModel(
                        service_journeys = [
                            openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/service_journey_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.ServiceJourneyApiModel(
                                gid = '', 
                                direction = '', 
                                line = openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/line_details_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.LineDetailsApiModel(
                                    name = '', 
                                    background_color = '', 
                                    foreground_color = '', 
                                    border_color = '', 
                                    transport_mode = 'unknown', 
                                    transport_sub_mode = 'unknown', ), 
                                service_journey_coordinates = [
                                    openapi_client.models.vt/api_planera_resa/web/v4/models/coordinate_api_model.VT.ApiPlaneraResa.Web.V4.Models.CoordinateApiModel(
                                        latitude = 1.337, 
                                        longitude = 1.337, 
                                        elevation = 1.337, 
                                        is_on_trip_leg = True, 
                                        is_trip_leg_start = True, 
                                        is_trip_leg_stop = True, )
                                    ], 
                                calls_on_service_journey = [
                                    openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/call_details_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.CallDetailsApiModel(
                                        stop_point = openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/stop_point_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.StopPointApiModel(
                                            gid = '0', 
                                            name = '0', 
                                            platform = '', 
                                            latitude = 1.337, 
                                            longitude = 1.337, 
                                            stop_area = openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/stop_area_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.StopAreaApiModel(
                                                gid = '', 
                                                name = '', 
                                                latitude = 1.337, 
                                                longitude = 1.337, 
                                                tariff_zone1 = openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/tariff_zone_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.TariffZoneApiModel(
                                                    gid = '', 
                                                    name = '', 
                                                    number = 56, 
                                                    short_name = '', ), 
                                                tariff_zone2 = openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/tariff_zone_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.TariffZoneApiModel(
                                                    gid = '', 
                                                    name = '', 
                                                    number = 56, 
                                                    short_name = '', ), ), ), 
                                        planned_arrival_time = '', 
                                        planned_departure_time = '', 
                                        estimated_arrival_time = '', 
                                        estimated_departure_time = '', 
                                        estimated_otherwise_planned_arrival_time = '', 
                                        estimated_otherwise_planned_departure_time = '', 
                                        planned_platform = '', 
                                        estimated_platform = '', 
                                        latitude = 1.337, 
                                        longitude = 1.337, 
                                        index = '', 
                                        is_on_trip_leg = True, 
                                        is_trip_leg_start = True, 
                                        is_trip_leg_stop = True, 
                                        tariff_zones = [
                                            
                                            ], 
                                        occupancy = openapi_client.models.vt/api_planera_resa/web/v4/models/occupancy_information_api_model.VT.ApiPlaneraResa.Web.V4.Models.OccupancyInformationApiModel(
                                            level = 'low', 
                                            source = 'prediction', ), 
                                        is_cancelled = True, 
                                        is_departure_cancelled = True, 
                                        is_arrival_cancelled = True, )
                                    ], )
                            ], 
                        calls_on_trip_leg = [
                            openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/call_details_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.CallDetailsApiModel(
                                stop_point = openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/stop_point_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.StopPointApiModel(
                                    gid = '0', 
                                    name = '0', 
                                    platform = '', 
                                    latitude = 1.337, 
                                    longitude = 1.337, ), 
                                planned_arrival_time = '', 
                                planned_departure_time = '', 
                                estimated_arrival_time = '', 
                                estimated_departure_time = '', 
                                estimated_otherwise_planned_arrival_time = '', 
                                estimated_otherwise_planned_departure_time = '', 
                                planned_platform = '', 
                                estimated_platform = '', 
                                latitude = 1.337, 
                                longitude = 1.337, 
                                index = '', 
                                is_on_trip_leg = True, 
                                is_trip_leg_start = True, 
                                is_trip_leg_stop = True, 
                                is_cancelled = True, 
                                is_departure_cancelled = True, 
                                is_arrival_cancelled = True, )
                            ], 
                        trip_leg_coordinates = [
                            openapi_client.models.vt/api_planera_resa/web/v4/models/coordinate_api_model.VT.ApiPlaneraResa.Web.V4.Models.CoordinateApiModel(
                                latitude = 1.337, 
                                longitude = 1.337, 
                                elevation = 1.337, 
                                is_on_trip_leg = True, 
                                is_trip_leg_start = True, 
                                is_trip_leg_stop = True, )
                            ], 
                        tariff_zones = [
                            
                            ], 
                        is_cancelled = True, 
                        is_part_cancelled = True, 
                        occupancy = openapi_client.models.vt/api_planera_resa/web/v4/models/occupancy_information_api_model.VT.ApiPlaneraResa.Web.V4.Models.OccupancyInformationApiModel(), 
                        journey_leg_index = 56, )
                    ],
                connection_links = [
                    openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/connection_link_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.ConnectionLinkApiModel(
                        transport_mode = 'unknown', 
                        transport_sub_mode = 'unknown', 
                        origin = openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/call_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.CallApiModel(
                            stop_point = openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/stop_point_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.StopPointApiModel(
                                gid = '0', 
                                name = '0', 
                                platform = '', 
                                latitude = 1.337, 
                                longitude = 1.337, 
                                stop_area = openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/stop_area_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.StopAreaApiModel(
                                    gid = '', 
                                    name = '', 
                                    latitude = 1.337, 
                                    longitude = 1.337, 
                                    tariff_zone1 = openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/tariff_zone_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.TariffZoneApiModel(
                                        gid = '', 
                                        name = '', 
                                        number = 56, 
                                        short_name = '', ), 
                                    tariff_zone2 = openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/tariff_zone_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.TariffZoneApiModel(
                                        gid = '', 
                                        name = '', 
                                        number = 56, 
                                        short_name = '', ), ), ), 
                            planned_time = '0', 
                            estimated_time = '', 
                            estimated_otherwise_planned_time = '', 
                            notes = [
                                openapi_client.models.vt/api_planera_resa/core/models/note.VT.ApiPlaneraResa.Core.Models.Note(
                                    type = '', 
                                    severity = 'unknown', 
                                    text = '', )
                                ], ), 
                        destination = openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/call_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.CallApiModel(
                            stop_point = openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/stop_point_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.StopPointApiModel(
                                gid = '0', 
                                name = '0', 
                                platform = '', 
                                latitude = 1.337, 
                                longitude = 1.337, ), 
                            planned_time = '0', 
                            estimated_time = '', 
                            estimated_otherwise_planned_time = '', ), 
                        notes = [
                            openapi_client.models.vt/api_planera_resa/core/models/note.VT.ApiPlaneraResa.Core.Models.Note(
                                type = '', 
                                text = '', )
                            ], 
                        distance_in_meters = 56, 
                        planned_departure_time = '', 
                        planned_arrival_time = '', 
                        planned_duration_in_minutes = 56, 
                        estimated_departure_time = '', 
                        estimated_arrival_time = '', 
                        estimated_duration_in_minutes = 56, 
                        estimated_number_of_steps = 56, 
                        link_coordinates = [
                            openapi_client.models.vt/api_planera_resa/web/v4/models/coordinate_api_model.VT.ApiPlaneraResa.Web.V4.Models.CoordinateApiModel(
                                latitude = 1.337, 
                                longitude = 1.337, 
                                elevation = 1.337, 
                                is_on_trip_leg = True, 
                                is_trip_leg_start = True, 
                                is_trip_leg_stop = True, )
                            ], 
                        segments = [
                            openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/link_segment_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.LinkSegmentApiModel(
                                name = '', 
                                maneuver = 'none', 
                                orientation = 'unknown', 
                                maneuver_description = '', 
                                distance_in_meters = 56, )
                            ], 
                        journey_leg_index = 56, )
                    ],
                arrival_access_link = openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/arrival_access_link_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.ArrivalAccessLinkApiModel(
                    transport_mode = 'unknown', 
                    transport_sub_mode = 'unknown', 
                    origin = openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/call_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.CallApiModel(
                        stop_point = openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/stop_point_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.StopPointApiModel(
                            gid = '0', 
                            name = '0', 
                            platform = '', 
                            latitude = 1.337, 
                            longitude = 1.337, 
                            stop_area = openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/stop_area_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.StopAreaApiModel(
                                gid = '', 
                                name = '', 
                                latitude = 1.337, 
                                longitude = 1.337, 
                                tariff_zone1 = openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/tariff_zone_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.TariffZoneApiModel(
                                    gid = '', 
                                    name = '', 
                                    number = 56, 
                                    short_name = '', ), 
                                tariff_zone2 = openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/tariff_zone_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.TariffZoneApiModel(
                                    gid = '', 
                                    name = '', 
                                    number = 56, 
                                    short_name = '', ), ), ), 
                        planned_time = '0', 
                        estimated_time = '', 
                        estimated_otherwise_planned_time = '', 
                        notes = [
                            openapi_client.models.vt/api_planera_resa/core/models/note.VT.ApiPlaneraResa.Core.Models.Note(
                                type = '', 
                                severity = 'unknown', 
                                text = '', )
                            ], ), 
                    destination = openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/link_endpoint_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.LinkEndpointApiModel(
                        gid = '', 
                        name = '0', 
                        location_type = 'unknown', 
                        latitude = 1.337, 
                        longitude = 1.337, 
                        planned_time = '0', 
                        estimated_time = '', 
                        estimated_otherwise_planned_time = '', ), 
                    notes = [
                        openapi_client.models.vt/api_planera_resa/core/models/note.VT.ApiPlaneraResa.Core.Models.Note(
                            type = '', 
                            text = '', )
                        ], 
                    distance_in_meters = 56, 
                    planned_departure_time = '', 
                    planned_arrival_time = '', 
                    planned_duration_in_minutes = 56, 
                    estimated_departure_time = '', 
                    estimated_arrival_time = '', 
                    estimated_duration_in_minutes = 56, 
                    estimated_number_of_steps = 56, 
                    link_coordinates = [
                        openapi_client.models.vt/api_planera_resa/web/v4/models/coordinate_api_model.VT.ApiPlaneraResa.Web.V4.Models.CoordinateApiModel(
                            latitude = 1.337, 
                            longitude = 1.337, 
                            elevation = 1.337, 
                            is_on_trip_leg = True, 
                            is_trip_leg_start = True, 
                            is_trip_leg_stop = True, )
                        ], 
                    segments = [
                        openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/link_segment_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.LinkSegmentApiModel(
                            name = '', 
                            maneuver = 'none', 
                            orientation = 'unknown', 
                            maneuver_description = '', 
                            distance_in_meters = 56, )
                        ], ),
                destination_link = openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/destination_link_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.DestinationLinkApiModel(
                    transport_mode = 'unknown', 
                    transport_sub_mode = 'unknown', 
                    origin = openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/link_endpoint_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.LinkEndpointApiModel(
                        gid = '', 
                        name = '0', 
                        location_type = 'unknown', 
                        latitude = 1.337, 
                        longitude = 1.337, 
                        planned_time = '0', 
                        estimated_time = '', 
                        estimated_otherwise_planned_time = '', 
                        notes = [
                            openapi_client.models.vt/api_planera_resa/core/models/note.VT.ApiPlaneraResa.Core.Models.Note(
                                type = '', 
                                severity = 'unknown', 
                                text = '', )
                            ], ), 
                    destination = openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/link_endpoint_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.LinkEndpointApiModel(
                        gid = '', 
                        name = '0', 
                        location_type = 'unknown', 
                        latitude = 1.337, 
                        longitude = 1.337, 
                        planned_time = '0', 
                        estimated_time = '', 
                        estimated_otherwise_planned_time = '', ), 
                    notes = [
                        openapi_client.models.vt/api_planera_resa/core/models/note.VT.ApiPlaneraResa.Core.Models.Note(
                            type = '', 
                            text = '', )
                        ], 
                    distance_in_meters = 56, 
                    planned_departure_time = '', 
                    planned_arrival_time = '', 
                    planned_duration_in_minutes = 56, 
                    estimated_departure_time = '', 
                    estimated_arrival_time = '', 
                    estimated_duration_in_minutes = 56, 
                    estimated_number_of_steps = 56, 
                    link_coordinates = [
                        openapi_client.models.vt/api_planera_resa/web/v4/models/coordinate_api_model.VT.ApiPlaneraResa.Web.V4.Models.CoordinateApiModel(
                            latitude = 1.337, 
                            longitude = 1.337, 
                            elevation = 1.337, 
                            is_on_trip_leg = True, 
                            is_trip_leg_start = True, 
                            is_trip_leg_stop = True, )
                        ], 
                    segments = [
                        openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/link_segment_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.LinkSegmentApiModel(
                            name = '', 
                            maneuver = 'none', 
                            orientation = 'unknown', 
                            maneuver_description = '', 
                            distance_in_meters = 56, )
                        ], ),
                ticket_suggestions_result = openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/ticket_suggestions_result_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.TicketSuggestionsResultApiModel(
                    has_error = True, 
                    ticket_suggestions = [
                        openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/ticket_suggestion_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.TicketSuggestionApiModel(
                            product_id = 56, 
                            product_name = '', 
                            product_type = 56, 
                            traveller_category = 'unknown', 
                            price_in_sek = 1.337, 
                            time_validity = openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/time_validity_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.TimeValidityApiModel(
                                type = 'unknown', 
                                amount = 56, 
                                unit = 'unknown', 
                                from_date = '2018-11-29', 
                                to_date = '2018-11-30', 
                                from_date_time = '2018-11-30T17:07:10+01:00', 
                                to_date_time = '2018-11-30T17:07:10+01:00', ), 
                            time_limitation = 'unknown', 
                            sale_channels = [
                                openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/channel_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.ChannelApiModel(
                                    id = 56, 
                                    ticket_name = '', )
                                ], 
                            valid_zones = [
                                openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/zone_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.ZoneApiModel(
                                    id = 56, )
                                ], 
                            product_instance_type = 'static', 
                            punch_configuration = openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/punch_configuration_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.PunchConfigurationApiModel(
                                quota = 56, 
                                duration = openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/punch_configuration_duration_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.PunchConfigurationDurationApiModel(
                                    amount = 56, ), ), 
                            offer_specification = '', )
                        ], 
                    ticket_validities = [
                        openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/ticket_validity_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.TicketValidityApiModel(
                            id = '', 
                            is_valid_for_journey = True, )
                        ], ),
                tariff_zones = [
                    openapi_client.models.vt/api_planera_resa/web/v4/models/journey_details/tariff_zone_api_model.VT.ApiPlaneraResa.Web.V4.Models.JourneyDetails.TariffZoneApiModel(
                        gid = '', 
                        name = '', 
                        number = 56, 
                        short_name = '', )
                    ],
                occupancy = openapi_client.models.vt/api_planera_resa/web/v4/models/occupancy_information_api_model.VT.ApiPlaneraResa.Web.V4.Models.OccupancyInformationApiModel(
                    level = 'low', 
                    source = 'prediction', )
            )
        else:
            return VTApiPlaneraResaWebV4ModelsJourneyDetailsJourneyDetailsApiModel(
        )
        """

    def testVTApiPlaneraResaWebV4ModelsJourneyDetailsJourneyDetailsApiModel(self):
        """Test VTApiPlaneraResaWebV4ModelsJourneyDetailsJourneyDetailsApiModel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
